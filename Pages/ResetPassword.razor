@page "/reset-password"
@layout LoginLayout
@using System.ComponentModel.DataAnnotations
@inject UserServices UserServices


<EditForm Model="@resetModel" OnValidSubmit="HandleResetPassword">
    <DataAnnotationsValidator />
    <div class="login-form">
        <div class="text">Reset Password</div>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="info-message">@message</div>
        }

        <div class="field">
            <div class="fa fa-lock"></div>
            <InputText @bind-Value="resetModel.NewPassword" type="password" placeholder="New Password" class="input-field" />
        </div>
        <ValidationMessage For="@(() => resetModel.NewPassword)" />

        <div class="field">
            <div class="fa fa-lock"></div>
            <InputText @bind-Value="resetModel.ConfirmPassword" type="password" placeholder="Confirm Password" class="input-field" />
        </div>
        <ValidationMessage For="@(() => resetModel.ConfirmPassword)" />

        <button class="btn-login" type="submit">Reset Password</button>

        <div class="link">
            Done reset your password? <a href="/">Login</a>
        </div>
    </div>
</EditForm>

@code {
    private ResetPasswordModel resetModel = new();
    private string? message;

    private void HandleResetPassword()
    {
        if (resetModel.NewPassword != resetModel.ConfirmPassword)
        {
            message = "Passwords do not match.";
        }
        else
        {
            message = "Password reset successful (simulated). You can now login.";
        }
    }

    public class ResetPasswordModel
    {
        [Required(ErrorMessage = "New password is required")]
        public string? NewPassword { get; set; }

        [Required(ErrorMessage = "Please confirm your password")]
        public string? ConfirmPassword { get; set; }
    }
}
